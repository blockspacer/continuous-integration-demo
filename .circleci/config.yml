version: 2

workflows:
  version: 2
  default:
    jobs:
      - build-with-clang-and-test
          # filters:
          #   branches:
          #     only: master
          


# workflows:
#   version: 2
#   build_and_test:
#     jobs:
#       - build
#       - test:
#           requires:
#             - build
#           filters:
#             branches:
#               only: master


step-library:
  - &generate-cache-key
      run:
        name: Generate cache key
        command: |
          echo "$(date +"%Y-%V")" > .circle-week
          ccache --clear
          ccache --max-size=5G
  - &restore-cache
      restore_cache:
        keys:
          - 'v3/{{ .Environment.CIRCLE_JOB }}/{{ .Branch }}/{{ checksum ".circle-week" }}'
          - 'v3/{{ .Environment.CIRCLE_JOB }}/master/{{ checksum ".circle-week" }}'
  - &save-cache
      save_cache:
        key: 'v3/{{ .Environment.CIRCLE_JOB }}/{{ .Branch }}/{{ checksum ".circle-week" }}'
        paths: [ "/opt/cmake-3.9.1-Linux-x86_64/bin", "/root/.ccache", "mason_packages/.binaries" ]

  - &install-cmake-3-9-1
      run:
        name: Install CMake 3.9.1
        command: |
          curl -sSL https://cmake.org/files/v3.9/cmake-3.9.1-Linux-x86_64.tar.gz | sudo tar -xzC /opt 
          # export PATH=/opt/cmake-3.9.1-Linux-x86_64/bin:$PATH
          # which cmake
          # echo '' >> ~/.bashrc
          # echo 'export PATH=/opt/cmake-3.9.1-Linux-x86_64/bin:$PATH' >> ~/.bashrc
          # echo $PATH
  
  - &add-ppa-ubuntu-toolchain-r
      run:
        name: Add Ubuntu Toolchain Repository
        command: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update

          
  - &install-valgrind-and-util-linux 
      run:
        name: Install valgrind and util-linux
        command: |
          sudo apt-get install util-linux valgrind 
          
  - &install-boost
      run:
        name: Install boost libraries
        command: |
          sudo apt-get install libboost-dev libboost-system-dev libboost-filesystem-dev

  - &install-clang-5-0
      run:
        name: Install Clang 5.0 compiler together with valgrind and util-linux
        command: |
          sudo add-apt-repository -y 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main'
          sudo apt-get update
          sudo apt-get install util-linux clang-5.0 valgrind 

  - &init-git-submodules
      run:
        name: Init Git submodules
        command: |
          git submodule init
          git submodule update

  - &execute-cmake-and-make
      run:
        name: Execute CMake and Make
        command: |
          export PATH=/opt/cmake-3.9.1-Linux-x86_64/bin:$PATH
          echo $PATH
          mkdir build
          cd build
          cmake ..
          make

  - &perform-unit-tests
      run:
        name: Perform Unit tests  
        command: |
          pwd
          ls
          cd build
          ctest -VV


jobs:
# ------------------------------------------------------------------------------
  build-with-clang-and-test:
    machine: true
    #working_directory: 
    environment:
      LIBSYSCONFCPUS: 4
      JOBS: 4
      BUILDTYPE: Debug
      CMAKE_CXX_COMPILER: clang++5
      CMAKE_C_COMPILER: clang-5
    steps:
      - *generate-cache-key
      - *restore-cache
      - *install-cmake-3-9-1
      - *save-cache
      - *add-ppa-ubuntu-toolchain-r
      - *install-valgrind-and-util-linux 
      - *install-boost
      - *install-clang-5-0
      - checkout
      - *init-git-submodules
      - *execute-cmake-and-make
      - *perform-unit-tests
